"""
Радиотелескоп пытается получать и анализировать сигналы,
поступающие из различных участков космоса, при этом различные шумы переводятся
в последовательность целых неотрицательных чисел. Чисел может быть очень много,
но не может быть меньше трёх.
Все числа различны. Хотя бы одно из чисел нечётно.
В данных, полученных из одного участка, выделяется основное подмножество чисел.
Это непустое подмножество чисел
(в него могут войти как одно число, так и все поступившие числа), такое,
что их сумма нечётна и максимальна среди всех возможных непустых подмножеств
с нечётной суммой. Если таких подмножеств несколько, то из них выбирается
то подмножество, которое содержит наименьшее количество элементов.

На вход программе в первой строке подаётся количество сигналов N. В каждой
из последующих N строк записано одно целое неотрицательное число,
не превышающее 10^9.
Программа должна вывести в порядке возрастания номера сигналов, которые
принадлежат основному подмножеству данного участка. Нумерация элементов
последовательности ведётся с единицы.
"""

def bruteforce():
    n = int(input())
    min_odd = 1000000005
    num_odd = 0

    a = []
    for i in range(n):
        a.append(int(input()))

    for i in range(n):
        if a[i] % 2 != 0:
            num_odd += 1
            if a[i] < min_odd:
                min_odd = a[i]
    for i in range(n):
        if num_odd % 2 == 0:
            if a[i] != min_odd and a[i] != 0:
                print(i+1, end = ' ')
        else:
            if a[i] != 0:
                print(i+1, end = ' ')

def optimal():
    n = int(input())
    min_odd = 100000000050
    num_odd = 0
    flags = [1 for i in range(n)]
    
    for i in range(n):
        num = int(input())
        if num % 2 != 0:
            num_odd += 1
            if num < min_odd:
                min_odd = num
                flags[i] = min_odd
        elif num == 0:
            flags[i] = 0
    if num_odd % 2 == 0:
        for i in range(n):
            if flags[i] % 2 != 0 and flags[i] != min_odd:
                print(i+1, end = ' ')
    else:
        for i in range(n):
            if flags[i] % 2 != 0:
                print(i+1, end = ' ')


def main():
    optimal()
    #bruteforce()

main()








            
